   #[1]Mempool

   (BUTTON) Toggle navigation [2]Satoshi Nakamoto Institute
     * [3]The Complete Satoshi
     * [4]Literature
     * [5]Research
     * [6]Mempool

   [7]All Posts
   [8]Previous | [9]Back | [10]Next

Re: Transactions and Scripts: DUP HASH160 ... EQUALVERIFY CHECKSIG

Bitcointalk

2010-06-17 18:46:08 UTC - [11]Original Post

   The nature of Bitcoin is such that once version 0.1 was released, the
   core design was set in stone for the rest of its lifetime.  Because of
   that, I wanted to design it to support every possible transaction type
   I could think of.  The problem was, each thing required special support
   code and data fields whether it was used or not, and only covered one
   special case at a time.  It would have been an explosion of special
   cases.  The solution was script, which generalizes the problem so
   transacting parties can describe their transaction as a predicate that
   the node network evaluates.  The nodes only need to understand the
   transaction to the extent of evaluating whether the senderʼs conditions
   are met.
   The script is actually a predicate.  Itʼs just an equation that
   evaluates to true or false.  Predicate is a long and unfamiliar word so
   I called it script.
   The receiver of a payment does a template match on the script.
   Currently, receivers only accept two templates: direct payment and
   bitcoin address.  Future versions can add templates for more
   transaction types and nodes running that version or higher will be able
   to receive them.  All versions of nodes in the network can verify and
   process any new transactions into blocks, even though they may not know
   how to read them.
   The design supports a tremendous variety of possible transaction types
   that I designed years ago.  Escrow transactions, bonded contracts,
   third party arbitration, multi-party signature, etc.  If Bitcoin
   catches on in a big way, these are things weʼll want to explore in the
   future, but they all had to be designed at the beginning to make sure
   they would be possible later.
   I donʼt believe a second, compatible implementation of Bitcoin will
   ever be a good idea.  So much of the design depends on all nodes
   getting exactly identical results in lockstep that a second
   implementation would be a menace to the network.  The MIT license is
   compatible with all other licenses and commercial uses, so there is no
   need to rewrite it from a licensing standpoint.
   [12]Previous | [13]Back | [14]Next
   [15]All Posts

   [16]Creative Commons License  – [17]About  – [18]Contact  – [19]Donate
   BTC  – [20]Atom feed  – [21]GitHub  – [22]Twitter
   Satoshi Nakamoto Institute is licensed under a [23]Creative Commons
   Attribution-ShareAlike 4.0 International License. Some works may be
   subject to other licenses.

References

   1. https://nakamotoinstitute.org/mempool/feed/
   2. https://nakamotoinstitute.org/
   3. https://satoshi.nakamotoinstitute.org/
   4. https://nakamotoinstitute.org/literature/
   5. https://nakamotoinstitute.org/research/
   6. https://nakamotoinstitute.org/mempool/
   7. https://satoshi.nakamotoinstitute.org/posts/
   8. https://satoshi.nakamotoinstitute.org/posts/bitcointalk/125/
   9. https://satoshi.nakamotoinstitute.org/posts/bitcointalk/
  10. https://satoshi.nakamotoinstitute.org/posts/bitcointalk/127/
  11. https://bitcointalk.org/index.php?topic=195.msg1611#msg1611
  12. https://satoshi.nakamotoinstitute.org/posts/bitcointalk/125/
  13. https://satoshi.nakamotoinstitute.org/posts/
  14. https://satoshi.nakamotoinstitute.org/posts/bitcointalk/127/
  15. https://satoshi.nakamotoinstitute.org/posts/
  16. http://creativecommons.org/licenses/by-sa/4.0/
  17. https://nakamotoinstitute.org/about/
  18. https://nakamotoinstitute.org/contact/
  19. bitcoin:16jKNsybzdgYpXaUBXoEHxB9onLbjxyfAD
  20. https://nakamotoinstitute.org/mempool/feed/
  21. https://github.com/NakamotoInstitute/nakamotoinstitute.org
  22. https://twitter.com/nakamotoinst
  23. http://creativecommons.org/licenses/by-sa/4.0/

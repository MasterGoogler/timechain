   #[1]Mempool

   (BUTTON) Toggle navigation [2]Satoshi Nakamoto Institute
     * [3]The Complete Satoshi
     * [4]Literature
     * [5]Research
     * [6]Mempool

   [7]Previous | [8]Index | [9]Next

Re: Bitcoin P2P e-cash paper 2008-11-14 22:29:22 UTC

   Hal Finney wrote:
   > I think it is necessary that nodes keep a separate
   > pending-transaction list associated with each candidate chain.
   > ... One might also ask ... how many candidate chains must
   > a given node keep track of at one time, on average?
   Fortunately, it's only necessary to keep a pending-transaction pool for
   the
   current best branch. When a new block arrives for the best branch,
   ConnectBlock removes the block's transactions from the pending-tx pool.
   If a
   different branch becomes longer, it calls DisconnectBlock on the main
   branch
   down to the fork, returning the block transactions to the pending-tx
   pool, and
   calls ConnectBlock on the new branch, sopping back up any transactions
   that
   were in both branches. It's expected that reorgs like this would be
   rare and
   shallow.
   With this optimisation, candidate branches are not really any burden.
   They
   just sit on the disk and don't require attention unless they ever
   become the
   main chain.
   > Or as James raised earlier, if the network broadcast
   > is reliable but depends on a potentially slow flooding
   > algorithm, how does that impact performance?
   Broadcasts will probably be almost completely reliable. TCP
   transmissions are
   rarely ever dropped these days, and the broadcast protocol has a retry
   mechanism to get the data from other nodes after a while. If broadcasts
   turn
   out to be slower in practice than expected, the target time between
   blocks may
   have to be increased to avoid wasting resources. We want blocks to
   usually
   propagate in much less time than it takes to generate them, otherwise
   nodes
   would spend too much time working on obsolete blocks.
   I'm planning to run an automated test with computers randomly sending
   payments
   to each other and randomly dropping packets.
   > 3. The bitcoin system turns out to be socially useful and valuable,
   so
   > that node operators feel that they are making a beneficial
   contribution
   > to the world by their efforts (similar to the various "@Home" compute
   > projects where people volunteer their compute resources for good
   causes).
   >
   > In this case it seems to me that simple altruism can suffice to keep
   the
   > network running properly.
   It's very attractive to the libertarian viewpoint if we can explain it
   properly. I'm better with code than with words though.
   Satoshi Nakamoto
   ---------------------------------------------------------------------
   The Cryptography Mailing List
   Unsubscribe by sending "unsubscribe cryptography" to [EMAIL PROTECTED]
   [10]Previous | [11]Index | [12]Next

   [13]Creative Commons License  – [14]About  – [15]Contact  – [16]Donate
   BTC  – [17]Atom feed  – [18]GitHub  – [19]Twitter
   Satoshi Nakamoto Institute is licensed under a [20]Creative Commons
   Attribution-ShareAlike 4.0 International License. Some works may be
   subject to other licenses.

References

   1. https://nakamotoinstitute.org/mempool/feed/
   2. https://nakamotoinstitute.org/
   3. https://satoshi.nakamotoinstitute.org/
   4. https://nakamotoinstitute.org/literature/
   5. https://nakamotoinstitute.org/research/
   6. https://nakamotoinstitute.org/mempool/
   7. https://satoshi.nakamotoinstitute.org/emails/cryptography/11/
   8. https://satoshi.nakamotoinstitute.org/emails/
   9. https://satoshi.nakamotoinstitute.org/emails/cryptography/13/
  10. https://satoshi.nakamotoinstitute.org/emails/cryptography/11/
  11. https://satoshi.nakamotoinstitute.org/emails/
  12. https://satoshi.nakamotoinstitute.org/emails/cryptography/13/
  13. http://creativecommons.org/licenses/by-sa/4.0/
  14. https://nakamotoinstitute.org/about/
  15. https://nakamotoinstitute.org/contact/
  16. bitcoin:14TRj7v11vMw4if37tUU7xHkzgg3GQNi3X
  17. https://nakamotoinstitute.org/mempool/feed/
  18. https://github.com/NakamotoInstitute/nakamotoinstitute.org
  19. https://twitter.com/nakamotoinst
  20. http://creativecommons.org/licenses/by-sa/4.0/
